spring:
  profiles:
    active: 
       - dev

  jpa:
    properties:
      jakarta.persistence.validation.mode: none
    hibernate:
      ddl-auto: update
      
  datasource: 
    generate-unique-name: false

data:
  web:
    pageable:
      default-page-size: 3
      max-page-size: 8

hoaxify:
  uploaded-path: picture-storage

---
spring:
  config:
    activate:
      on-profile: production

hoaxify:
  uploaded-path: production-storage

---
spring:
  config:
    activate:
      on-profile: dev

hoaxify:
  uploaded-path: dev-storage















#       
#spring:
#   jpa:
#      properties:
#         jakarta: 
#            persistence:
#               validation:
#                  mode: none
#data:
#   web:
#      pageable:
#          default-page-size: 3
#          max-page-size: 8
#                            
               
#spring:
#  datasource:
#    //generate-unique-name: false  Bunu her seferinde database adı oluşturmamak için kullandık.
#    url: jdbc:h2:file:./db/devdb
#    username: sa
#    password:
#  jpa:
#    hibernate:
#      ddl-auto: update

#   jackson:
#      mapper:
#         DEFAULT_VIEW_INCLUSION: true
            
             
            
    
# Aşağıdaki şekillerde loglevellerini belirlelyip istediğimiz seviyede log tutup hata vb. kontrolünü yapabiliriz.              
#logging: 
#   level:
#      org.springframework: DEBUG
#      
#logging:
#  level:
#    com.example.packageName: INFO  # Belirli bir paketin log seviyesini INFO olarak ayarlayın
#    another.packageName: WARN     # Başka bir paketin log seviyesini WARN olarak ayarlayın
#
#
